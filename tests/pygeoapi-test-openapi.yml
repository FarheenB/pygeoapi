# =================================================================
#
# Authors: Tom Kralidis <tomkralidis@gmail.com>
#
# Copyright (c) 2019 Tom Kralidis
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# =================================================================

components:
  parameters:
    f:
      description: The optional f parameter indicates the output format which the
        server shall provide as part of the response document.  The default format
        is GeoJSON.
      explode: false
      in: query
      name: f
      required: false
      schema:
        default: json
        enum:
        - json
        - html
        type: string
      style: form
    sortby:
      description: The optional sortby parameter indicates the sort property and order
        on which the server shall present results in the response document using the
        convention `sortby=PROPERTY:X`, where `PROPERTY` is the sort property and
        `X` is the sort order (`A` is ascending, `D` is descending). Sorting by multiple
        properties is supported by providing a comma-separated list.
      explode: false
      in: query
      name: sortby
      required: false
      schema:
        type: string
      style: form
    startindex:
      description: The optional startindex parameter indicates the index within the
        result set from which the server shall begin presenting results in the response
        document.  The first element has an index of 0 (default).
      explode: false
      in: query
      name: startindex
      required: false
      schema:
        default: 0
        minimum: 0
        type: integer
      style: form
    filter:
      name: filter
      in: query
      description: The optional filter parameter to provide filters on the collection
        items
      required: false
      style: form
      explode: false
      schema:
        type: string
    filter-lang:
      name: filter-lang
      in: query
      description: The optional parameter to provide filter lang
      required: false
      style: form
      explode: false
      schema:
        type: string
        default: cql-text
        enum:
        - cql-text
        - cql-json
  responses:
    '200':
      description: successful operation
    default:
      content:
        application/json:
          schema:
            $ref: https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/exception.yaml
      description: Unexpected error
    Queryables:
      description: Dataset Querables
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/queryables'
          example:
            queryables:
            - queryable: elevation
              title: Elevation
              description: The average distance of the road segment above sea level.
              type: double
            - queryable: nlanes
              title: Temperature
              description: The total number of lanes in all directions.
              type: integer
            - queryable: geom
              title: Segment Geometry
              description: The geometry of the road segment
              type: linestring
            - queryable: name
              title: Segment Name
              description: The common name of the road segment.
              type: string
  schemas:
    queryables:
      required:
      - queryables
      type: object
      properties:
        queryables:
          type: array
          items:
            $ref: '#/components/schemas/queryables_queryables'
    predicates:
      maxProperties: 1
      minProperties: 1
      type: object
      additionalProperties: true
      nullable: false
      allOf:
      - $ref: '#/components/schemas/logicalExpression'
      - $ref: '#/components/schemas/comparisonExpressions'
      - $ref: '#/components/schemas/spatialExpressions'
      - $ref: '#/components/schemas/temporalExpressions'
    logicalExpression:
      maxProperties: 1
      minProperties: 1
      type: object
      properties:
        and:
          $ref: '#/components/schemas/and'
        or:
          $ref: '#/components/schemas/or'
        not:
          $ref: '#/components/schemas/not'
      additionalProperties: true
      nullable: false
    comparisonExpressions:
      maxProperties: 1
      minProperties: 1
      type: object
      properties:
        eq:
          $ref: '#/components/schemas/eq'
        lt:
          $ref: '#/components/schemas/lt'
        gt:
          $ref: '#/components/schemas/gt'
        lte:
          $ref: '#/components/schemas/lte'
        gte:
          $ref: '#/components/schemas/gte'
        between:
          $ref: '#/components/schemas/between'
        like:
          $ref: '#/components/schemas/like'
        in:
          $ref: '#/components/schemas/in'
      additionalProperties: true
      nullable: false
    spatialExpressions:
      maxProperties: 1
      minProperties: 1
      type: object
      properties:
        equals:
          $ref: '#/components/schemas/equals'
        disjoint:
          $ref: '#/components/schemas/disjoint'
        touches:
          $ref: '#/components/schemas/touches'
        within:
          $ref: '#/components/schemas/within'
        overlaps:
          $ref: '#/components/schemas/overlaps'
        crosses:
          $ref: '#/components/schemas/crosses'
        intersects:
          $ref: '#/components/schemas/intersects'
        contains:
          $ref: '#/components/schemas/contains'
      additionalProperties: true
      nullable: false
    temporalExpressions:
      maxProperties: 1
      minProperties: 1
      type: object
      properties:
        after:
          $ref: '#/components/schemas/after'
        before:
          $ref: '#/components/schemas/before'
        begins:
          $ref: '#/components/schemas/begins'
        begunby:
          $ref: '#/components/schemas/begunby'
        tcontains:
          $ref: '#/components/schemas/tcontains'
        during:
          $ref: '#/components/schemas/during'
        endedby:
          $ref: '#/components/schemas/endedby'
        ends:
          $ref: '#/components/schemas/ends'
        tequals:
          $ref: '#/components/schemas/tequals'
        meets:
          $ref: '#/components/schemas/meets'
        metby:
          $ref: '#/components/schemas/metby'
        toverlaps:
          $ref: '#/components/schemas/toverlaps'
        overlappedby:
          $ref: '#/components/schemas/overlappedby'
      additionalProperties: true
      nullable: false
    and:
      $ref: '#/components/schemas/booleanOperands'
    or:
      $ref: '#/components/schemas/booleanOperands'
    not:
      $ref: '#/components/schemas/predicates'
    eq:
      $ref: '#/components/schemas/scalarOperands'
    lt:
      $ref: '#/components/schemas/scalarOperands'
    gt:
      $ref: '#/components/schemas/scalarOperands'
    lte:
      $ref: '#/components/schemas/scalarOperands'
    gte:
      $ref: '#/components/schemas/scalarOperands'
    between:
      required:
      - lower
      - property
      - upper
      type: object
      properties:
        property:
          type: string
          nullable: false
        lower:
          $ref: '#/components/schemas/scalarLiteral'
        upper:
          $ref: '#/components/schemas/scalarLiteral'
      additionalProperties: true
      nullable: false
    like:
      type: object
      properties:
        wildcard:
          type: string
          nullable: false
          default: '%'
        singleChar:
          type: string
          nullable: false
          default: _
        escape:
          type: string
          nullable: false
          default: \\
        nocase:
          type: boolean
          nullable: false
          default: true
        property:
          type: string
          nullable: false
        value:
          $ref: '#/components/schemas/scalarLiteral'
      additionalProperties: true
      nullable: false
    in:
      type: object
      properties:
        nocase:
          type: boolean
          nullable: false
          default: true
        property:
          type: string
          nullable: false
        values:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/scalarLiteral'
      additionalProperties: true
      nullable: false
    equals:
      $ref: '#/components/schemas/spatialOperands'
    disjoint:
      $ref: '#/components/schemas/spatialOperands'
    touches:
      $ref: '#/components/schemas/spatialOperands'
    within:
      $ref: '#/components/schemas/spatialOperands'
    overlaps:
      $ref: '#/components/schemas/spatialOperands'
    crosses:
      $ref: '#/components/schemas/spatialOperands'
    intersects:
      $ref: '#/components/schemas/spatialOperands'
    contains:
      $ref: '#/components/schemas/spatialOperands'
    after:
      $ref: '#/components/schemas/temporalOperands'
    before:
      $ref: '#/components/schemas/temporalOperands'
    begins:
      $ref: '#/components/schemas/temporalOperands'
    begunby:
      $ref: '#/components/schemas/temporalOperands'
    tcontains:
      $ref: '#/components/schemas/temporalOperands'
    during:
      $ref: '#/components/schemas/temporalOperands'
    endedby:
      $ref: '#/components/schemas/temporalOperands'
    ends:
      $ref: '#/components/schemas/temporalOperands'
    tequals:
      $ref: '#/components/schemas/temporalOperands'
    meets:
      $ref: '#/components/schemas/temporalOperands'
    metby:
      $ref: '#/components/schemas/temporalOperands'
    toverlaps:
      $ref: '#/components/schemas/temporalOperands'
    overlappedby:
      $ref: '#/components/schemas/temporalOperands'
    anyinteracts:
      $ref: '#/components/schemas/temporalOperands'
    tintersects:
      $ref: '#/components/schemas/temporalOperands'
    booleanOperands:
      type: array
      nullable: false
      items:
        $ref: '#/components/schemas/predicates'
    arithmeticOperands:
      maxProperties: 2
      minProperties: 2
      type: object
      properties:
        property:
          type: string
          nullable: false
        function:
          $ref: '#/components/schemas/function'
        value:
          type: number
          nullable: false
        "+":
          $ref: '#/components/schemas/add'
        "-":
          $ref: '#/components/schemas/sub'
        '*':
          $ref: '#/components/schemas/mul'
        /:
          $ref: '#/components/schemas/div'
      additionalProperties: true
      nullable: false
    add:
      $ref: '#/components/schemas/arithmeticOperands'
    sub:
      $ref: '#/components/schemas/arithmeticOperands'
    mul:
      $ref: '#/components/schemas/arithmeticOperands'
    div:
      $ref: '#/components/schemas/arithmeticOperands'
    scalarOperands:
      maxProperties: 2
      minProperties: 2
      type: object
      properties:
        property:
          type: string
          nullable: false
        function:
          $ref: '#/components/schemas/function'
        value:
          $ref: '#/components/schemas/scalarLiteral'
        "+":
          $ref: '#/components/schemas/add'
        "-":
          $ref: '#/components/schemas/sub'
        '*':
          $ref: '#/components/schemas/mul'
        /:
          $ref: '#/components/schemas/div'
      additionalProperties: true
      nullable: false
    spatialOperands:
      maxProperties: 2
      minProperties: 2
      type: object
      properties:
        property:
          type: string
          nullable: false
        function:
          $ref: '#/components/schemas/function'
        value:
          $ref: '#/components/schemas/geometryLiteral'
      additionalProperties: true
      nullable: false
    temporalOperands:
      maxProperties: 2
      minProperties: 2
      type: object
      properties:
        property:
          type: string
          nullable: false
        function:
          $ref: '#/components/schemas/function'
        value:
          $ref: '#/components/schemas/temporalLiteral'
      additionalProperties: true
      nullable: false
    function:
      type: object
      properties:
        name:
          type: string
          nullable: false
        arguments:
          type: array
          nullable: false
          items:
            oneOf:
            - type: string
              nullable: false
            - type: number
              nullable: false
            - type: boolean
              nullable: false
            - $ref: '#/components/schemas/functionObjectArgument'
      additionalProperties: true
      nullable: false
    functionObjectArgument:
      type: object
      properties:
        property:
          type: string
          nullable: false
        function:
          $ref: '#/components/schemas/function'
        geometry:
          $ref: '#/components/schemas/geometryLiteral'
        bbox:
          $ref: '#/components/schemas/bbox'
        temporalValue:
          $ref: '#/components/schemas/temporalLiteral'
        "+":
          $ref: '#/components/schemas/add'
        "-":
          $ref: '#/components/schemas/sub'
        '*':
          $ref: '#/components/schemas/mul'
        /:
          $ref: '#/components/schemas/div'
      additionalProperties: true
      nullable: false
    scalarLiteral:
      oneOf:
      - type: string
        nullable: false
      - type: number
        nullable: false
      - type: boolean
        nullable: false
    geometryLiteral:
      type: object
      additionalProperties: true
      nullable: false
    bbox:
      type: array
      nullable: false
      items:
        maxItems: 6
        minItems: 4
        type: number
        nullable: false
    envelopeLiteral:
      type: object
      properties:
        bbox:
          $ref: '#/components/schemas/bbox'
      additionalProperties: true
      nullable: false
    temporalLiteral:
      oneOf:
      - $ref: '#/components/schemas/timeLiteral'
      - $ref: '#/components/schemas/periodLiteral'
    timeLiteral:
      pattern: '[0-9][0-9][0-9][0-9]-[0-1][0-9]-[0-9][0-9](T[0-2][0-9]:[0-5][0-9]:[0-5][0-9](.[0-9]*)?)?'
      type: string
      nullable: false
    periodLiteral:
      type: array
      nullable: false
      items:
        $ref: '#/components/schemas/timeLiteral'
    capabilities-assertion:
      required:
      - name
      - operators
      type: object
      properties:
        name:
          type: string
          enum:
          - logical
          - comparison
          - spatial
          - temporal
          - arithmetic
        operators:
          type: array
          items:
            type: string
        operands:
          type: array
          items:
            type: string
    functionDescription:
      type: object
      properties:
        name:
          type: string
        returns:
          $ref: '#/components/schemas/functionDescription_returns'
        arguments:
          type: array
          items:
            $ref: '#/components/schemas/functionDescription_arguments'
    filter-capabilities:
      required:
      - capabilites
      - conformance-classes
      type: object
      properties:
        conformance-classes:
          type: array
          nullable: false
          items:
            type: string
            format: uri
            nullable: false
        capabilities:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/capabilities-assertion'
        functions:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/functionDescription'
      additionalProperties: true
      nullable: false
    landingPage:
      required:
      - links
      type: object
      properties:
        title:
          type: string
          example: Buildings in Bonn
        description:
          type: string
          example: Access to data about buildings in the city of Bonn via a Web API
            that conforms to the OGC API Features specification.
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    link:
      required:
      - href
      type: object
      properties:
        href:
          type: string
          example: http://data.example.com/buildings/123
        rel:
          type: string
          example: alternate
        type:
          type: string
          example: application/geo+json
        hreflang:
          type: string
          example: en
        title:
          type: string
          example: Trierer Strasse 70, 53115 Bonn
        length:
          type: integer
    exception:
      required:
      - code
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      description: 'Information about the exception: an error code plus an optional
        description.'
    collections:
      required:
      - collections
      - links
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        collections:
          type: array
          items:
            $ref: '#/components/schemas/collection'
    collection:
      required:
      - id
      - links
      type: object
      properties:
        id:
          type: string
          description: identifier of the collection used, for example, in URIs
          example: address
        title:
          type: string
          description: human readable title of the collection
          example: address
        description:
          type: string
          description: a description of the features in the collection
          example: An address.
        links:
          type: array
          example:
          - href: http://data.example.com/buildings
            rel: item
          - href: http://example.com/concepts/buildings.html
            rel: describedBy
            type: text/html
          items:
            $ref: '#/components/schemas/link'
        extent:
          $ref: '#/components/schemas/extent'
        itemType:
          type: string
          description: indicator about the type of the items in the collection (the
            default value is 'feature').
          default: feature
        crs:
          type: array
          description: the list of coordinate reference systems supported by the service
          example:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          - http://www.opengis.net/def/crs/EPSG/0/4326
          items:
            type: string
          default:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
    extent:
      type: object
      properties:
        spatial:
          $ref: '#/components/schemas/extent_spatial'
        temporal:
          $ref: '#/components/schemas/extent_temporal'
      description: |-
        The extent of the features in the collection. In the Core only spatial and temporal
        extents are specified. Extensions may add additional members to represent other
        extents, for example, thermal or pressure ranges.
    featureCollectionGeoJSON:
      required:
      - features
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/featureGeoJSON'
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        timeStamp:
          $ref: '#/components/schemas/timeStamp'
        numberMatched:
          $ref: '#/components/schemas/numberMatched'
        numberReturned:
          $ref: '#/components/schemas/numberReturned'
    featureGeoJSON:
      required:
      - geometry
      - properties
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - Feature
        geometry:
          $ref: '#/components/schemas/geometryGeoJSON'
        properties:
          type: object
          nullable: true
        id:
          oneOf:
          - type: string
          - type: integer
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    geometryGeoJSON:
      oneOf:
      - $ref: '#/components/schemas/pointGeoJSON'
      - $ref: '#/components/schemas/multipointGeoJSON'
      - $ref: '#/components/schemas/linestringGeoJSON'
      - $ref: '#/components/schemas/multilinestringGeoJSON'
      - $ref: '#/components/schemas/polygonGeoJSON'
      - $ref: '#/components/schemas/multipolygonGeoJSON'
      - $ref: '#/components/schemas/geometrycollectionGeoJSON'
    pointGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - Point
        coordinates:
          minItems: 2
          type: array
          items:
            type: number
    multipointGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - MultiPoint
        coordinates:
          type: array
          items:
            minItems: 2
            type: array
            items:
              type: number
    linestringGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - LineString
        coordinates:
          minItems: 2
          type: array
          items:
            minItems: 2
            type: array
            items:
              type: number
    multilinestringGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - MultiLineString
        coordinates:
          type: array
          items:
            minItems: 2
            type: array
            items:
              minItems: 2
              type: array
              items:
                type: number
    polygonGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - Polygon
        coordinates:
          type: array
          items:
            minItems: 4
            type: array
            items:
              minItems: 2
              type: array
              items:
                type: number
    multipolygonGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - MultiPolygon
        coordinates:
          type: array
          items:
            type: array
            items:
              minItems: 4
              type: array
              items:
                minItems: 2
                type: array
                items:
                  type: number
    geometrycollectionGeoJSON:
      required:
      - geometries
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - GeometryCollection
        geometries:
          type: array
          items:
            $ref: '#/components/schemas/geometryGeoJSON'
    timeStamp:
      type: string
      description: This property indicates the time and date when the response was
        generated.
      format: date-time
      example: 2017-08-17T08:05:32Z
    numberMatched:
      minimum: 0
      type: integer
      description: |-
        The number of features of the feature type that match the selection
        parameters like `bbox`.
      example: 127
    numberReturned:
      minimum: 0
      type: integer
      description: |-
        The number of features in the feature collection.

        A server may omit this information in a response, if the information
        about the number of features is not known or difficult to compute.

        If the value is provided, the value shall be identical to the number
        of items in the "features" array.
      example: 10
    confClasses:
      required:
      - conformsTo
      type: object
      properties:
        conformsTo:
          type: array
          items:
            type: string
    exception_2:
      required:
      - code
      type: object
      properties:
        code:
          type: string
        description:
          type: string
    execute:
      required:
      - mode
      - outputs
      - response
      type: object
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/input'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/output'
        mode:
          type: string
          enum:
          - sync
          - async
          - auto
        response:
          type: string
          enum:
          - raw
          - document
        subscriber:
          $ref: '#/components/schemas/subscriber'
    input:
      required:
      - id
      - input
      type: object
      properties:
        id:
          type: string
        input:
          oneOf:
          - $ref: '#/components/schemas/complexData'
          - $ref: '#/components/schemas/literalData'
          - $ref: '#/components/schemas/boundingBoxData'
          - $ref: '#/components/schemas/input'
    output:
      allOf:
      - $ref: '#/components/schemas/dataType'
      - type: object
        properties:
          id:
            type: string
          transmissionMode:
            $ref: '#/components/schemas/transmissionMode'
    subscriber:
      required:
      - successUrl
      type: object
      properties:
        successUri:
          type: string
          format: uri
        inProgressUri:
          type: string
          format: uri
        failedUri:
          type: string
          format: uri
      description: |-
        Optional URIs for callbacks for this job.

        Support for this parameter is not required and the parameter may be
        removed from the API definition, if conformance class **'callback'**
        is not listed in the conformance declaration under `/conformance`.
    complexData:
      allOf:
      - $ref: '#/components/schemas/dataType'
      - required:
        - value
        type: object
        properties:
          value:
            $ref: '#/components/schemas/valueType'
    literalData:
      type: object
      properties:
        value:
          type: string
        dataType:
          $ref: '#/components/schemas/nameReferenceType'
        uom:
          $ref: '#/components/schemas/nameReferenceType'
    boundingBoxData:
      required:
      - bbox
      type: object
      properties:
        crs:
          type: string
          format: uri
        bbox:
          maxItems: 6
          minItems: 4
          type: array
          items:
            type: number
    dataType:
      type: object
      properties:
        format:
          $ref: '#/components/schemas/format'
    transmissionMode:
      type: string
      enum:
      - value
      - reference
    valueType:
      oneOf:
      - $ref: '#/components/schemas/inlineValue'
      - $ref: '#/components/schemas/referenceValue'
    nameReferenceType:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        reference:
          type: string
          format: uri
    format:
      required:
      - mimeType
      type: object
      properties:
        mimeType:
          type: string
        schema:
          type: string
        encoding:
          type: string
    inlineValue:
      required:
      - inlineValue
      type: object
      properties:
        inlineValue:
          oneOf:
          - type: string
          - type: number
          - type: boolean
          - type: object
    referenceValue:
      required:
      - href
      type: object
      properties:
        href:
          type: string
    queryables_queryables:
      required:
      - queryable
      - type
      type: object
      properties:
        queryable:
          type: string
          description: the token that may be used in a CQL predicate
        title:
          type: string
          description: a human readble title for the queryable
        description:
          type: string
          description: a human-readable narrative describing the queryable
        language:
          type: string
          description: the language used for the title and description
        type:
          type: string
          description: the data type of the queryable
        type-ref:
          type: string
          description: a reference to the formal definition of the type
          format: url
    functionDescription_returns:
      type: object
      properties:
        type:
          type: string
        typeRef:
          type: string
          format: uri
    functionDescription_arguments:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        typeRef:
          type: string
          format: uri
    extent_spatial:
      type: object
      properties:
        bbox:
          minItems: 1
          type: array
          description: |-
            One or more bounding boxes that describe the spatial extent of the dataset.
            In the Core only a single bounding box is supported. Extensions may support
            additional areas. If multiple areas are provided, the union of the bounding
            boxes describes the spatial extent.
          items:
            maxItems: 6
            minItems: 4
            type: array
            description: |-
              Each bounding box is provided as four or six numbers, depending on
              whether the coordinate reference system includes a vertical axis
              (height or depth):

              * Lower left corner, coordinate axis 1
              * Lower left corner, coordinate axis 2
              * Minimum value, coordinate axis 3 (optional)
              * Upper right corner, coordinate axis 1
              * Upper right corner, coordinate axis 2
              * Maximum value, coordinate axis 3 (optional)

              The coordinate reference system of the values is WGS 84 longitude/latitude
              (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate
              reference system is specified in `crs`.

              For WGS 84 longitude/latitude the values are in most cases the sequence of
              minimum longitude, minimum latitude, maximum longitude and maximum latitude.
              However, in cases where the box spans the antimeridian the first value
              (west-most box edge) is larger than the third value (east-most box edge).

              If the vertical axis is included, the third and the sixth number are
              the bottom and the top of the 3-dimensional bounding box.

              If a feature has multiple spatial geometry properties, it is the decision of the
              server whether only a single spatial geometry property is used to determine
              the extent or all relevant geometries.
            example:
            - -180
            - -90
            - 180
            - 90
            items:
              type: number
        crs:
          type: string
          description: |-
            Coordinate reference system of the coordinates in the spatial extent
            (property `bbox`). The default reference system is WGS 84 longitude/latitude.
            In the Core this is the only supported coordinate reference system.
            Extensions may support additional coordinate reference systems and add
            additional enum values.
          default: http://www.opengis.net/def/crs/OGC/1.3/CRS84
          enum:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
      description: The spatial extent of the features in the collection.
    extent_temporal:
      type: object
      properties:
        interval:
          minItems: 1
          type: array
          description: |-
            One or more time intervals that describe the temporal extent of the dataset.
            The value `null` is supported and indicates an open time intervall.
            In the Core only a single time interval is supported. Extensions may support
            multiple intervals. If multiple intervals are provided, the union of the
            intervals describes the temporal extent.
          items:
            maxItems: 2
            minItems: 2
            type: array
            description: |-
              Begin and end times of the time interval. The timestamps
              are in the coordinate reference system specified in `trs`. By default
              this is the Gregorian calendar.
            example:
            - 2011-11-11T12:22:11Z
            - null
            items:
              type: string
              format: date-time
              nullable: true
        trs:
          type: string
          description: |-
            Coordinate reference system of the coordinates in the temporal extent
            (property `interval`). The default reference system is the Gregorian calendar.
            In the Core this is the only supported temporal reference system.
            Extensions may support additional temporal reference systems and add
            additional enum values.
          default: http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
          enum:
          - http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
      description: The temporal extent of the features in the collection.

info:
  contact:
    email: you@example.org
    name: Organization Name
    url: https://pygeoapi.io
  description: pygeoapi provides an API to geospatial data
  license:
    name: CC-BY 4.0 license
    url: https://creativecommons.org/licenses/by/4.0/
  termsOfService: None
  title: pygeoapi default instance
  version: 3.0.2
  x-keywords:
  - geospatial
  - data
  - api
openapi: 3.0.2
paths:
  /:
    get:
      description: Landing page
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        200:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage
        400:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        500:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Landing page
      tags:
      - server
  /openapi:
    get:
      description: This document
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        200:
          $ref: '#/components/responses/200'
        400:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        default:
          $ref: '#/components/responses/default'
      summary: This document
      tags:
      - server
  /collections:
    get:
      description: Feature Collections
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        200:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collections
        400:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        500:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Feature Collections
      tags:
      - server
  /queryables:
    get:
      description: Queryables
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        200:
          $ref: '#/components/responses/Queryables'
        400:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        404:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        500:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Querables
      tags:
      - server
  /collections/obs:
    get:
      description: My cool observations
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        200:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection
        400:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        404:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        500:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get feature collection metadata
      tags:
      - obs
  /collections/obs/queryables:
    get:
      description: Observation Queryables
      parameters:
        - $ref: '#/components/parameters/f'
      responses:
        200:
          $ref: '#/components/responses/Queryables'
        400:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        404:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        500:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Windmills within The Netherlands queryables
      tags:
      - obs
  /collections/obs/items:
    get:
      description: My cool observations
      parameters:
      - description: The optional f parameter indicates the output format which the
          server shall provide as part of the response document.  The default format
          is GeoJSON.
        explode: false
        in: query
        name: f
        required: false
        schema:
          default: json
          enum:
          - json
          - html
          - csv
          type: string
        style: form
      - $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/bbox
      - $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/limit
      - $ref: '#/components/parameters/sortby'
      - $ref: '#/components/parameters/startindex'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/filter-lang'
      responses:
        200:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features
        400:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        404:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        500:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Observations features
      tags:
      - obs
  /collections/obs/items/{featureId}:
    get:
      description: My cool observations
      parameters:
      - $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId
      - $ref: '#/components/parameters/f'
      responses:
        200:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Feature
        400:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        404:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        500:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Observations feature by id
      tags:
      - obs
  /conformance:
    get:
      description: API conformance definition
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        200:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ConformanceDeclaration
        400:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        500:
          $ref: http://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: API conformance definition
      tags:
      - server
  /processes:
    get:
      description: Processes
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        200:
          $ref: '#/components/responses/200'
        default:
          $ref: '#/components/responses/default'
      summary: Processes
      tags:
      - server
  /processes/hello-world:
    get:
      description: Hello World process
      parameters:
      - $ref: '#/components/parameters/f'
      responses:
        200:
          $ref: '#/components/responses/200'
        default:
          $ref: '#/components/responses/default'
      summary: Get process metadata
      tags:
      - hello-world
  /processes/hello-world/jobs:
    get:
      description: Hello World process
      responses:
        200:
          $ref: '#/components/responses/200'
        default:
          $ref: '#/components/responses/default'
      summary: Retrieve job list for process
      tags:
      - hello-world
    post:
      description: Hello World process
      parameters: []
      requestBody:
        content:
          application/json:
            example:
              inputs:
              - id: name
                type: text/plain
                value: hi there
            schema:
              $ref: https://raw.githubusercontent.com/opengeospatial/wps-rest-binding/master/core/openapi/schemas/execute.yaml
        description: Mandatory execute request JSON
        required: true
      responses:
        200:
          $ref: '#/components/responses/200'
        default:
          $ref: '#/components/responses/default'
      summary: Process Hello World process execution
      tags:
      - hello-world
servers:
- description: pygeoapi provides an API to geospatial data
  url: http://localhost:5000/
tags:
- description: pygeoapi provides an API to geospatial data
  externalDocs:
    description: information
    url: http://example.org
  name: server
- description: My cool observations
  name: obs
- description: Hello World process
  name: hello-world

