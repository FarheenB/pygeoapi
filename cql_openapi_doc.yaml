openapi: 3.0.2
info:
  title: pygeoapi default instance
  description: pygeoapi provides an API to geospatial data
  termsOfService: https://creativecommons.org/licenses/by/4.0/
  contact:
    name: Organization Name
    url: https://pygeoapi.io
    email: you@example.org
  license:
    name: CC-BY 4.0 license
    url: https://creativecommons.org/licenses/by/4.0/
  version: "3.0"
  x-keywords:
  - geospatial
  - data
  - api
servers:
- url: https://demo.pygeoapi.io/stable
  description: pygeoapi provides an API to geospatial data
tags:
- name: server
  description: pygeoapi provides an API to geospatial data
  externalDocs:
    description: information
    url: http://example.org
- name: dutch_windmills
  description: Locations of castles within the Netherlands from Rijksdienst voor het
    Cultureel Erfgoed (RCE) INSPIRE WFS. Uses GeoServer WFS v2 backend via OGRProvider.
paths:
  /:
    get:
      tags:
      - server
      summary: Landing page
      description: Landing page
      parameters:
      - name: f
        in: query
        description: The optional f parameter indicates the output format which the
          server shall provide as part of the response document.  The default format
          is GeoJSON.
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: json
          enum:
          - json
          - html
          - jsonld
      responses:
        "200":
          description: |-
            The landing page provides links to the API definition
            (link relations `service-desc` and `service-doc`),
            the Conformance declaration (path `/conformance`,
            link relation `conformance`), and the Feature
            Collections (path `/collections`, link relation
            `data`).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/landingPage'
              example:
                title: Buildings in Bonn
                description: Access to data about buildings in the city of Bonn via
                  a Web API that conforms to the OGC API Features specification.
                links:
                - href: http://data.example.org/
                  rel: self
                  type: application/json
                  title: this document
                - href: http://data.example.org/api
                  rel: service-desc
                  type: application/vnd.oai.openapi+json;version=3.0
                  title: the API definition
                - href: http://data.example.org/api.html
                  rel: service-doc
                  type: text/html
                  title: the API documentation
                - href: http://data.example.org/conformance
                  rel: conformance
                  type: application/json
                  title: OGC API conformance classes implemented by this server
                - href: http://data.example.org/collections
                  rel: data
                  type: application/json
                  title: Information about the feature collections
            text/html:
              schema:
                type: string
        "400":
          description: A query parameter has an invalid value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
        "500":
          description: A server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /collections:
    get:
      tags:
      - server
      summary: Collections
      description: Collections
      parameters:
      - name: f
        in: query
        description: The optional f parameter indicates the output format which the
          server shall provide as part of the response document.  The default format
          is GeoJSON.
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: json
          enum:
          - json
          - html
          - jsonld
      responses:
        "200":
          description: |-
            The feature collections shared by this API.

            The dataset is organized as one or more feature collections. This resource
            provides information about and access to the collections.

            The response contains the list of collections. For each collection, a link
            to the items in the collection (path `/collections/{collectionId}/items`,
            link relation `items`) as well as key information about the collection.
            This information includes:

            * A local identifier for the collection that is unique for the dataset;
            * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
            * An optional title and description for the collection;
            * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
            * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collections'
              example:
                links:
                - href: http://data.example.org/collections.json
                  rel: self
                  type: application/json
                  title: this document
                - href: http://data.example.org/collections.html
                  rel: alternate
                  type: text/html
                  title: this document as HTML
                - href: http://schemas.example.org/1.0/buildings.xsd
                  rel: describedBy
                  type: application/xml
                  title: GML application schema for Acme Corporation building data
                - href: http://download.example.org/buildings.gpkg
                  rel: enclosure
                  type: application/geopackage+sqlite3
                  title: Bulk download (GeoPackage)
                  length: 472546
                collections:
                - id: buildings
                  title: Buildings
                  description: Buildings in the city of Bonn.
                  extent:
                    spatial:
                      bbox:
                      - - 7.0099999999999997868371792719699442386627197265625
                        - 50.63000000000000255795384873636066913604736328125
                        - 7.21999999999999975131004248396493494510650634765625
                        - 50.780000000000001136868377216160297393798828125
                    temporal:
                      interval:
                      - - 2010-02-15T12:34:56Z
                        - null
                  links:
                  - href: http://data.example.org/collections/buildings/items
                    rel: items
                    type: application/geo+json
                    title: Buildings
                  - href: http://data.example.org/collections/buildings/items.html
                    rel: items
                    type: text/html
                    title: Buildings
                  - href: https://creativecommons.org/publicdomain/zero/1.0/
                    rel: license
                    type: text/html
                    title: CC0-1.0
                  - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
                    rel: license
                    type: application/rdf+xml
                    title: CC0-1.0
            text/html:
              schema:
                type: string
        "400":
          description: A query parameter has an invalid value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
        "500":
          description: A server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /queryables:
    get:
      tags:
      - server
      summary: Querables
      description: Queryables
      parameters:
      - name: f
        in: query
        description: The optional f parameter indicates the output format which the
          server shall provide as part of the response document.  The default format
          is GeoJSON.
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: json
          enum:
          - json
          - html
          - jsonld
      responses:
        "200":
          description: Dataset Querables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queryables'
              example:
                queryables:
                - queryable: elevation
                  title: Elevation
                  description: The average distance of the road segment above sea
                    level.
                  type: double
                - queryable: nlanes
                  title: Temperature
                  description: The total number of lanes in all directions.
                  type: integer
                - queryable: geom
                  title: Segment Geometry
                  description: The geometry of the road segment
                  type: linestring
                - queryable: name
                  title: Segment Name
                  description: The common name of the road segment.
                  type: string
        "400":
          description: A query parameter has an invalid value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
        "404":
          description: The requested URI was not found.
        "500":
          description: A server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /collections/dutch_windmills:
    get:
      tags:
      - dutch_windmills
      summary: Get feature collection metadata
      description: Locations of windmills within the Netherlands from Rijksdienst
        voor het Cultureel Erfgoed (RCE) INSPIRE WFS. Uses GeoServer WFS v2 backend
        via OGRProvider.
      parameters:
      - name: f
        in: query
        description: The optional f parameter indicates the output format which the
          server shall provide as part of the response document.  The default format
          is GeoJSON.
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: json
          enum:
          - json
          - html
          - jsonld
      responses:
        "200":
          description: |-
            Information about the feature collection with id `collectionId`.

            The response contains a linkto the items in the collection
            (path `/collections/{collectionId}/items`,link relation `items`)
            as well as key information about the collection. This information
            includes:

            * A local identifier for the collection that is unique for the dataset;
            * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);
            * An optional title and description for the collection;
            * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
            * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection'
              example:
                id: buildings
                title: Buildings
                description: Buildings in the city of Bonn.
                extent:
                  spatial:
                    bbox:
                    - - 7.0099999999999997868371792719699442386627197265625
                      - 50.63000000000000255795384873636066913604736328125
                      - 7.21999999999999975131004248396493494510650634765625
                      - 50.780000000000001136868377216160297393798828125
                  temporal:
                    interval:
                    - - 2010-02-15T12:34:56Z
                      - null
                links:
                - href: http://data.example.org/collections/buildings/items
                  rel: items
                  type: application/geo+json
                  title: Buildings
                - href: http://data.example.org/collections/buildings/items.html
                  rel: items
                  type: text/html
                  title: Buildings
                - href: https://creativecommons.org/publicdomain/zero/1.0/
                  rel: license
                  type: text/html
                  title: CC0-1.0
                - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
                  rel: license
                  type: application/rdf+xml
                  title: CC0-1.0
            text/html:
              schema:
                type: string
        "400":
          description: A query parameter has an invalid value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
        "404":
          description: The requested URI was not found.
        "500":
          description: A server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /collections/dutch_windmills/queryables:
    get:
      tags:
      - dutch_windmills
      summary: Get Windmills within The Netherlands queryables
      description: Locations of windmills within the Netherlands from Rijksdienst
        voor het Cultureel Erfgoed (RCE) INSPIRE WFS. Uses GeoServer WFS v2 backend
        via OGRProvider.
      parameters:
      - name: f
        in: query
        description: The optional f parameter indicates the output format which the
          server shall provide as part of the response document.  The default format
          is GeoJSON.
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: json
          enum:
          - json
          - html
          - jsonld
      responses:
        "200":
          description: Dataset Querables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queryables'
              example:
                queryables:
                - queryable: elevation
                  title: Elevation
                  description: The average distance of the road segment above sea
                    level.
                  type: double
                - queryable: nlanes
                  title: Temperature
                  description: The total number of lanes in all directions.
                  type: integer
                - queryable: geom
                  title: Segment Geometry
                  description: The geometry of the road segment
                  type: linestring
                - queryable: name
                  title: Segment Name
                  description: The common name of the road segment.
                  type: string
        "400":
          description: A query parameter has an invalid value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
        "404":
          description: The requested URI was not found.
        "500":
          description: A server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /collections/dutch_windmills/items:
    get:
      tags:
      - dutch_windmills
      summary: Get Windmills within The Netherlands features
      description: Locations of windmills within the Netherlands from Rijksdienst
        voor het Cultureel Erfgoed (RCE) INSPIRE WFS. Uses GeoServer WFS v2 backend
        via OGRProvider.
      parameters:
      - name: f
        in: query
        description: The optional f parameter indicates the output format which the
          server shall provide as part of the response document.  The default format
          is GeoJSON.
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: json
          enum:
          - json
          - html
          - jsonld
          - csv
      - name: bbox
        in: query
        description: |-
          Only features that have a geometry that intersects the bounding box are selected.
          The bounding box is provided as four or six numbers, depending on whether the
          coordinate reference system includes a vertical axis (height or depth):

          * Lower left corner, coordinate axis 1
          * Lower left corner, coordinate axis 2
          * Minimum value, coordinate axis 3 (optional)
          * Upper right corner, coordinate axis 1
          * Upper right corner, coordinate axis 2
          * Maximum value, coordinate axis 3 (optional)

          The coordinate reference system of the values is WGS 84 longitude/latitude
          (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate
          reference system is specified in the parameter `bbox-crs`.

          For WGS 84 longitude/latitude the values are in most cases the sequence of
          minimum longitude, minimum latitude, maximum longitude and maximum latitude.
          However, in cases where the box spans the antimeridian the first value
          (west-most box edge) is larger than the third value (east-most box edge).

          If the vertical axis is included, the third and the sixth number are
          the bottom and the top of the 3-dimensional bounding box.

          If a feature has multiple spatial geometry properties, it is the decision of the
          server whether only a single spatial geometry property is used to determine
          the extent or all relevant geometries.
        required: false
        style: form
        explode: false
        schema:
          maxItems: 6
          minItems: 4
          type: array
          items:
            type: number
      - name: limit
        in: query
        description: |-
          The optional limit parameter limits the number of items that are presented in the response document.

          Only items are counted that are on the first level of the collection in the response document.
          Nested objects contained within the explicitly requested items shall not be counted.

          Minimum = 1. Maximum = 10000. Default = 10.
        required: false
        style: form
        explode: false
        schema:
          maximum: 10000
          minimum: 1
          type: integer
          default: 10
      - name: sortby
        in: query
        description: The optional sortby parameter indicates the sort property and
          order on which the server shall present results in the response document
          using the convention `sortby=PROPERTY:X` where `PROPERTY` is the sort property
          and `X` is the sort order (`A` is ascending `D` is descending). Sorting
          by multiple properties is supported by providing a comma-separated list.
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: startindex
        in: query
        description: The optional startindex parameter indicates the index within
          the result set from which the server shall begin presenting results in the
          response document.  The first element has an index of 0 (default).
        required: false
        style: form
        explode: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: filter
        in: query
        description: The optional filter parameter to provide filters on the collection
          items
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: filter-lang
        in: query
        description: The optional parameter to provide filter lang
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: cql-text
          enum:
          - cql-text
          - cql-json
      - name: id
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: scalerank
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: name
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: name_alt
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: admin
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: string
      - name: featureclass
        in: query
        required: false
        style: form
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: |-
            The response is a document consisting of features in the collection.
            The features included in the response are determined by the server
            based on the query parameters of the request. To support access to
            larger collections without overloading the client, the API supports
            paged access with links to the next page, if more features are selected
            that the page size.

            The `bbox` and `datetime` parameter can be used to select only a
            subset of the features in the collection (the features that are in the
            bounding box or time interval). The `bbox` parameter matches all features
            in the collection that are not associated with a location, too. The
            `datetime` parameter matches all features in the collection that are
            not associated with a time stamp or interval, too.

            The `limit` parameter may be used to control the subset of the
            selected features that should be returned in the response, the page size.
            Each page may include information about the number of selected and
            returned features (`numberMatched` and `numberReturned`) as well as
            links to support paging (link relation `next`).
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/featureCollectionGeoJSON'
              example:
                type: FeatureCollection
                links:
                - href: http://data.example.com/collections/buildings/items.json
                  rel: self
                  type: application/geo+json
                  title: this document
                - href: http://data.example.com/collections/buildings/items.html
                  rel: alternate
                  type: text/html
                  title: this document as HTML
                - href: http://data.example.com/collections/buildings/items.json&offset=10&limit=2
                  rel: next
                  type: application/geo+json
                  title: next page
                timeStamp: 2018-04-03T14:52:23Z
                numberMatched: 123
                numberReturned: 2
                features:
                - type: Feature
                  id: "123"
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    function: residential
                    floors: "2"
                    lastUpdate: 2015-08-01T12:34:56Z
                - type: Feature
                  id: "132"
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    function: public use
                    floors: "10"
                    lastUpdate: 2013-12-03T10:15:37Z
            text/html:
              schema:
                type: string
        "400":
          description: A query parameter has an invalid value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
        "404":
          description: The requested URI was not found.
        "500":
          description: A server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /collections/dutch_windmills/items/featureId:
    get:
      tags:
      - dutch_windmills
      summary: Get Windmills within The Netherlands feature by id
      description: Locations of windmills within the Netherlands from Rijksdienst
        voor het Cultureel Erfgoed (RCE) INSPIRE WFS. Uses GeoServer WFS v2 backend
        via OGRProvider.
      parameters:
      - name: featureId
        in: path
        description: local identifier of a feature
        required: true
        schema:
          type: string
      - name: f
        in: query
        description: The optional f parameter indicates the output format which the
          server shall provide as part of the response document.  The default format
          is GeoJSON.
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: json
          enum:
          - json
          - html
          - jsonld
      responses:
        "200":
          description: |-
            fetch the feature with id `featureId` in the feature collection
            with id `collectionId`
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/featureGeoJSON'
              example:
                type: Feature
                links:
                - href: http://data.example.com/id/building/123
                  rel: canonical
                  title: canonical URI of the building
                - href: http://data.example.com/collections/buildings/items/123.json
                  rel: self
                  type: application/geo+json
                  title: this document
                - href: http://data.example.com/collections/buildings/items/123.html
                  rel: alternate
                  type: text/html
                  title: this document as HTML
                - href: http://data.example.com/collections/buildings
                  rel: collection
                  type: application/geo+json
                  title: the collection document
                id: "123"
                geometry:
                  type: Polygon
                  coordinates:
                  - '...'
                properties:
                  function: residential
                  floors: "2"
                  lastUpdate: 2015-08-01T12:34:56Z
            text/html:
              schema:
                type: string
        "400":
          description: A query parameter has an invalid value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
        "404":
          description: The requested URI was not found.
        "500":
          description: A server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /conformance:
    get:
      tags:
      - server
      summary: API conformance definition
      description: API conformance definition
      parameters:
      - name: f
        in: query
        description: The optional f parameter indicates the output format which the
          server shall provide as part of the response document.  The default format
          is GeoJSON.
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: json
          enum:
          - json
          - html
          - jsonld
      responses:
        "200":
          description: |-
            The URIs of all conformance classes supported by the server.

            To support "generic" clients that want to access multiple
            OGC API Features implementations - and not "just" a specific
            API / server, the server declares the conformance
            classes it implements and conforms to.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/confClasses'
              example:
                conformsTo:
                - http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core
                - http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30
                - http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/html
                - http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson
            text/html:
              schema:
                type: string
        "400":
          description: A query parameter has an invalid value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
        "500":
          description: A server error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /openapi:
    get:
      tags:
      - server
      summary: This document
      description: This document
      parameters:
      - name: f
        in: query
        description: The optional f parameter indicates the output format which the
          server shall provide as part of the response document.  The default format
          is GeoJSON.
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: json
          enum:
          - json
          - html
          - jsonld
      responses:
        "200":
          description: successful operation
        "400":
          description: A query parameter has an invalid value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception_2'
  /processes:
    get:
      tags:
      - server
      summary: Processes
      description: Processes
      parameters:
      - name: f
        in: query
        description: The optional f parameter indicates the output format which the
          server shall provide as part of the response document.  The default format
          is GeoJSON.
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: json
          enum:
          - json
          - html
          - jsonld
      responses:
        "200":
          description: successful operation
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception_2'
  /processes/hello-world:
    get:
      tags:
      - hello-world
      summary: Get process metadata
      description: Hello World process
      parameters:
      - name: f
        in: query
        description: The optional f parameter indicates the output format which the
          server shall provide as part of the response document.  The default format
          is GeoJSON.
        required: false
        style: form
        explode: false
        schema:
          type: string
          default: json
          enum:
          - json
          - html
          - jsonld
      responses:
        "200":
          description: successful operation
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception_2'
  /processes/hello-world/jobs:
    get:
      tags:
      - hello-world
      summary: Retrieve job list for process
      description: Hello World process
      responses:
        "200":
          description: successful operation
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception_2'
    post:
      tags:
      - hello-world
      summary: Process Hello World process execution
      description: Hello World process
      parameters: []
      requestBody:
        description: Mandatory execute request JSON
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/execute'
            example:
              inputs:
              - id: name
                type: text/plain
                value: hi there
        required: true
      responses:
        "200":
          description: successful operation
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception_2'
components:
  schemas:
    queryables:
      required:
      - queryables
      type: object
      properties:
        queryables:
          type: array
          items:
            $ref: '#/components/schemas/queryables_queryables'
    predicates:
      maxProperties: 1
      minProperties: 1
      type: object
      additionalProperties: true
      nullable: false
      allOf:
      - $ref: '#/components/schemas/logicalExpression'
      - $ref: '#/components/schemas/comparisonExpressions'
      - $ref: '#/components/schemas/spatialExpressions'
      - $ref: '#/components/schemas/temporalExpressions'
    logicalExpression:
      maxProperties: 1
      minProperties: 1
      type: object
      properties:
        and:
          $ref: '#/components/schemas/and'
        or:
          $ref: '#/components/schemas/or'
        not:
          $ref: '#/components/schemas/not'
      additionalProperties: true
      nullable: false
    comparisonExpressions:
      maxProperties: 1
      minProperties: 1
      type: object
      properties:
        eq:
          $ref: '#/components/schemas/eq'
        lt:
          $ref: '#/components/schemas/lt'
        gt:
          $ref: '#/components/schemas/gt'
        lte:
          $ref: '#/components/schemas/lte'
        gte:
          $ref: '#/components/schemas/gte'
        between:
          $ref: '#/components/schemas/between'
        like:
          $ref: '#/components/schemas/like'
        in:
          $ref: '#/components/schemas/in'
      additionalProperties: true
      nullable: false
    spatialExpressions:
      maxProperties: 1
      minProperties: 1
      type: object
      properties:
        equals:
          $ref: '#/components/schemas/equals'
        disjoint:
          $ref: '#/components/schemas/disjoint'
        touches:
          $ref: '#/components/schemas/touches'
        within:
          $ref: '#/components/schemas/within'
        overlaps:
          $ref: '#/components/schemas/overlaps'
        crosses:
          $ref: '#/components/schemas/crosses'
        intersects:
          $ref: '#/components/schemas/intersects'
        contains:
          $ref: '#/components/schemas/contains'
      additionalProperties: true
      nullable: false
    temporalExpressions:
      maxProperties: 1
      minProperties: 1
      type: object
      properties:
        after:
          $ref: '#/components/schemas/after'
        before:
          $ref: '#/components/schemas/before'
        begins:
          $ref: '#/components/schemas/begins'
        begunby:
          $ref: '#/components/schemas/begunby'
        tcontains:
          $ref: '#/components/schemas/tcontains'
        during:
          $ref: '#/components/schemas/during'
        endedby:
          $ref: '#/components/schemas/endedby'
        ends:
          $ref: '#/components/schemas/ends'
        tequals:
          $ref: '#/components/schemas/tequals'
        meets:
          $ref: '#/components/schemas/meets'
        metby:
          $ref: '#/components/schemas/metby'
        toverlaps:
          $ref: '#/components/schemas/toverlaps'
        overlappedby:
          $ref: '#/components/schemas/overlappedby'
      additionalProperties: true
      nullable: false
    and:
      $ref: '#/components/schemas/booleanOperands'
    or:
      $ref: '#/components/schemas/booleanOperands'
    not:
      $ref: '#/components/schemas/predicates'
    eq:
      $ref: '#/components/schemas/scalarOperands'
    lt:
      $ref: '#/components/schemas/scalarOperands'
    gt:
      $ref: '#/components/schemas/scalarOperands'
    lte:
      $ref: '#/components/schemas/scalarOperands'
    gte:
      $ref: '#/components/schemas/scalarOperands'
    between:
      required:
      - lower
      - property
      - upper
      type: object
      properties:
        property:
          type: string
          nullable: false
        lower:
          $ref: '#/components/schemas/scalarLiteral'
        upper:
          $ref: '#/components/schemas/scalarLiteral'
      additionalProperties: true
      nullable: false
    like:
      type: object
      properties:
        wildcard:
          type: string
          nullable: false
          default: '%'
        singleChar:
          type: string
          nullable: false
          default: _
        escape:
          type: string
          nullable: false
          default: \\
        nocase:
          type: boolean
          nullable: false
          default: true
        property:
          type: string
          nullable: false
        value:
          $ref: '#/components/schemas/scalarLiteral'
      additionalProperties: true
      nullable: false
    in:
      type: object
      properties:
        nocase:
          type: boolean
          nullable: false
          default: true
        property:
          type: string
          nullable: false
        values:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/scalarLiteral'
      additionalProperties: true
      nullable: false
    equals:
      $ref: '#/components/schemas/spatialOperands'
    disjoint:
      $ref: '#/components/schemas/spatialOperands'
    touches:
      $ref: '#/components/schemas/spatialOperands'
    within:
      $ref: '#/components/schemas/spatialOperands'
    overlaps:
      $ref: '#/components/schemas/spatialOperands'
    crosses:
      $ref: '#/components/schemas/spatialOperands'
    intersects:
      $ref: '#/components/schemas/spatialOperands'
    contains:
      $ref: '#/components/schemas/spatialOperands'
    after:
      $ref: '#/components/schemas/temporalOperands'
    before:
      $ref: '#/components/schemas/temporalOperands'
    begins:
      $ref: '#/components/schemas/temporalOperands'
    begunby:
      $ref: '#/components/schemas/temporalOperands'
    tcontains:
      $ref: '#/components/schemas/temporalOperands'
    during:
      $ref: '#/components/schemas/temporalOperands'
    endedby:
      $ref: '#/components/schemas/temporalOperands'
    ends:
      $ref: '#/components/schemas/temporalOperands'
    tequals:
      $ref: '#/components/schemas/temporalOperands'
    meets:
      $ref: '#/components/schemas/temporalOperands'
    metby:
      $ref: '#/components/schemas/temporalOperands'
    toverlaps:
      $ref: '#/components/schemas/temporalOperands'
    overlappedby:
      $ref: '#/components/schemas/temporalOperands'
    anyinteracts:
      $ref: '#/components/schemas/temporalOperands'
    tintersects:
      $ref: '#/components/schemas/temporalOperands'
    booleanOperands:
      type: array
      nullable: false
      items:
        $ref: '#/components/schemas/predicates'
    arithmeticOperands:
      maxProperties: 2
      minProperties: 2
      type: object
      properties:
        property:
          type: string
          nullable: false
        function:
          $ref: '#/components/schemas/function'
        value:
          type: number
          nullable: false
        "+":
          $ref: '#/components/schemas/add'
        "-":
          $ref: '#/components/schemas/sub'
        '*':
          $ref: '#/components/schemas/mul'
        /:
          $ref: '#/components/schemas/div'
      additionalProperties: true
      nullable: false
    add:
      $ref: '#/components/schemas/arithmeticOperands'
    sub:
      $ref: '#/components/schemas/arithmeticOperands'
    mul:
      $ref: '#/components/schemas/arithmeticOperands'
    div:
      $ref: '#/components/schemas/arithmeticOperands'
    scalarOperands:
      maxProperties: 2
      minProperties: 2
      type: object
      properties:
        property:
          type: string
          nullable: false
        function:
          $ref: '#/components/schemas/function'
        value:
          $ref: '#/components/schemas/scalarLiteral'
        "+":
          $ref: '#/components/schemas/add'
        "-":
          $ref: '#/components/schemas/sub'
        '*':
          $ref: '#/components/schemas/mul'
        /:
          $ref: '#/components/schemas/div'
      additionalProperties: true
      nullable: false
    spatialOperands:
      maxProperties: 2
      minProperties: 2
      type: object
      properties:
        property:
          type: string
          nullable: false
        function:
          $ref: '#/components/schemas/function'
        value:
          $ref: '#/components/schemas/geometryLiteral'
      additionalProperties: true
      nullable: false
    temporalOperands:
      maxProperties: 2
      minProperties: 2
      type: object
      properties:
        property:
          type: string
          nullable: false
        function:
          $ref: '#/components/schemas/function'
        value:
          $ref: '#/components/schemas/temporalLiteral'
      additionalProperties: true
      nullable: false
    function:
      type: object
      properties:
        name:
          type: string
          nullable: false
        arguments:
          type: array
          nullable: false
          items:
            oneOf:
            - type: string
              nullable: false
            - type: number
              nullable: false
            - type: boolean
              nullable: false
            - $ref: '#/components/schemas/functionObjectArgument'
      additionalProperties: true
      nullable: false
    functionObjectArgument:
      type: object
      properties:
        property:
          type: string
          nullable: false
        function:
          $ref: '#/components/schemas/function'
        geometry:
          $ref: '#/components/schemas/geometryLiteral'
        bbox:
          $ref: '#/components/schemas/bbox'
        temporalValue:
          $ref: '#/components/schemas/temporalLiteral'
        "+":
          $ref: '#/components/schemas/add'
        "-":
          $ref: '#/components/schemas/sub'
        '*':
          $ref: '#/components/schemas/mul'
        /:
          $ref: '#/components/schemas/div'
      additionalProperties: true
      nullable: false
    scalarLiteral:
      oneOf:
      - type: string
        nullable: false
      - type: number
        nullable: false
      - type: boolean
        nullable: false
    geometryLiteral:
      type: object
      additionalProperties: true
      nullable: false
    bbox:
      type: array
      nullable: false
      items:
        maxItems: 6
        minItems: 4
        type: number
        nullable: false
    envelopeLiteral:
      type: object
      properties:
        bbox:
          $ref: '#/components/schemas/bbox'
      additionalProperties: true
      nullable: false
    temporalLiteral:
      oneOf:
      - $ref: '#/components/schemas/timeLiteral'
      - $ref: '#/components/schemas/periodLiteral'
    timeLiteral:
      pattern: '[0-9][0-9][0-9][0-9]-[0-1][0-9]-[0-9][0-9](T[0-2][0-9]:[0-5][0-9]:[0-5][0-9](.[0-9]*)?)?'
      type: string
      nullable: false
    periodLiteral:
      type: array
      nullable: false
      items:
        $ref: '#/components/schemas/timeLiteral'
    capabilities-assertion:
      required:
      - name
      - operators
      type: object
      properties:
        name:
          type: string
          enum:
          - logical
          - comparison
          - spatial
          - temporal
          - arithmetic
        operators:
          type: array
          items:
            type: string
        operands:
          type: array
          items:
            type: string
    functionDescription:
      type: object
      properties:
        name:
          type: string
        returns:
          $ref: '#/components/schemas/functionDescription_returns'
        arguments:
          type: array
          items:
            $ref: '#/components/schemas/functionDescription_arguments'
    filter-capabilities:
      required:
      - capabilites
      - conformance-classes
      type: object
      properties:
        conformance-classes:
          type: array
          nullable: false
          items:
            type: string
            format: uri
            nullable: false
        capabilities:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/capabilities-assertion'
        functions:
          type: array
          nullable: false
          items:
            $ref: '#/components/schemas/functionDescription'
      additionalProperties: true
      nullable: false
    landingPage:
      required:
      - links
      type: object
      properties:
        title:
          type: string
          example: Buildings in Bonn
        description:
          type: string
          example: Access to data about buildings in the city of Bonn via a Web API
            that conforms to the OGC API Features specification.
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    link:
      required:
      - href
      type: object
      properties:
        href:
          type: string
          example: http://data.example.com/buildings/123
        rel:
          type: string
          example: alternate
        type:
          type: string
          example: application/geo+json
        hreflang:
          type: string
          example: en
        title:
          type: string
          example: Trierer Strasse 70, 53115 Bonn
        length:
          type: integer
    exception:
      required:
      - code
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      description: 'Information about the exception: an error code plus an optional
        description.'
    collections:
      required:
      - collections
      - links
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        collections:
          type: array
          items:
            $ref: '#/components/schemas/collection'
    collection:
      required:
      - id
      - links
      type: object
      properties:
        id:
          type: string
          description: identifier of the collection used, for example, in URIs
          example: address
        title:
          type: string
          description: human readable title of the collection
          example: address
        description:
          type: string
          description: a description of the features in the collection
          example: An address.
        links:
          type: array
          example:
          - href: http://data.example.com/buildings
            rel: item
          - href: http://example.com/concepts/buildings.html
            rel: describedBy
            type: text/html
          items:
            $ref: '#/components/schemas/link'
        extent:
          $ref: '#/components/schemas/extent'
        itemType:
          type: string
          description: indicator about the type of the items in the collection (the
            default value is 'feature').
          default: feature
        crs:
          type: array
          description: the list of coordinate reference systems supported by the service
          example:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          - http://www.opengis.net/def/crs/EPSG/0/4326
          items:
            type: string
          default:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
    extent:
      type: object
      properties:
        spatial:
          $ref: '#/components/schemas/extent_spatial'
        temporal:
          $ref: '#/components/schemas/extent_temporal'
      description: |-
        The extent of the features in the collection. In the Core only spatial and temporal
        extents are specified. Extensions may add additional members to represent other
        extents, for example, thermal or pressure ranges.
    featureCollectionGeoJSON:
      required:
      - features
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/featureGeoJSON'
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        timeStamp:
          $ref: '#/components/schemas/timeStamp'
        numberMatched:
          $ref: '#/components/schemas/numberMatched'
        numberReturned:
          $ref: '#/components/schemas/numberReturned'
    featureGeoJSON:
      required:
      - geometry
      - properties
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - Feature
        geometry:
          $ref: '#/components/schemas/geometryGeoJSON'
        properties:
          type: object
          nullable: true
        id:
          oneOf:
          - type: string
          - type: integer
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    geometryGeoJSON:
      oneOf:
      - $ref: '#/components/schemas/pointGeoJSON'
      - $ref: '#/components/schemas/multipointGeoJSON'
      - $ref: '#/components/schemas/linestringGeoJSON'
      - $ref: '#/components/schemas/multilinestringGeoJSON'
      - $ref: '#/components/schemas/polygonGeoJSON'
      - $ref: '#/components/schemas/multipolygonGeoJSON'
      - $ref: '#/components/schemas/geometrycollectionGeoJSON'
    pointGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - Point
        coordinates:
          minItems: 2
          type: array
          items:
            type: number
    multipointGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - MultiPoint
        coordinates:
          type: array
          items:
            minItems: 2
            type: array
            items:
              type: number
    linestringGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - LineString
        coordinates:
          minItems: 2
          type: array
          items:
            minItems: 2
            type: array
            items:
              type: number
    multilinestringGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - MultiLineString
        coordinates:
          type: array
          items:
            minItems: 2
            type: array
            items:
              minItems: 2
              type: array
              items:
                type: number
    polygonGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - Polygon
        coordinates:
          type: array
          items:
            minItems: 4
            type: array
            items:
              minItems: 2
              type: array
              items:
                type: number
    multipolygonGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - MultiPolygon
        coordinates:
          type: array
          items:
            type: array
            items:
              minItems: 4
              type: array
              items:
                minItems: 2
                type: array
                items:
                  type: number
    geometrycollectionGeoJSON:
      required:
      - geometries
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - GeometryCollection
        geometries:
          type: array
          items:
            $ref: '#/components/schemas/geometryGeoJSON'
    timeStamp:
      type: string
      description: This property indicates the time and date when the response was
        generated.
      format: date-time
      example: 2017-08-17T08:05:32Z
    numberMatched:
      minimum: 0
      type: integer
      description: |-
        The number of features of the feature type that match the selection
        parameters like `bbox`.
      example: 127
    numberReturned:
      minimum: 0
      type: integer
      description: |-
        The number of features in the feature collection.

        A server may omit this information in a response, if the information
        about the number of features is not known or difficult to compute.

        If the value is provided, the value shall be identical to the number
        of items in the "features" array.
      example: 10
    confClasses:
      required:
      - conformsTo
      type: object
      properties:
        conformsTo:
          type: array
          items:
            type: string
    exception_2:
      required:
      - code
      type: object
      properties:
        code:
          type: string
        description:
          type: string
    execute:
      required:
      - mode
      - outputs
      - response
      type: object
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/input'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/output'
        mode:
          type: string
          enum:
          - sync
          - async
          - auto
        response:
          type: string
          enum:
          - raw
          - document
        subscriber:
          $ref: '#/components/schemas/subscriber'
    input:
      required:
      - id
      - input
      type: object
      properties:
        id:
          type: string
        input:
          oneOf:
          - $ref: '#/components/schemas/complexData'
          - $ref: '#/components/schemas/literalData'
          - $ref: '#/components/schemas/boundingBoxData'
          - $ref: '#/components/schemas/input'
    output:
      allOf:
      - $ref: '#/components/schemas/dataType'
      - type: object
        properties:
          id:
            type: string
          transmissionMode:
            $ref: '#/components/schemas/transmissionMode'
    subscriber:
      required:
      - successUrl
      type: object
      properties:
        successUri:
          type: string
          format: uri
        inProgressUri:
          type: string
          format: uri
        failedUri:
          type: string
          format: uri
      description: |-
        Optional URIs for callbacks for this job.

        Support for this parameter is not required and the parameter may be
        removed from the API definition, if conformance class **'callback'**
        is not listed in the conformance declaration under `/conformance`.
    complexData:
      allOf:
      - $ref: '#/components/schemas/dataType'
      - required:
        - value
        type: object
        properties:
          value:
            $ref: '#/components/schemas/valueType'
    literalData:
      type: object
      properties:
        value:
          type: string
        dataType:
          $ref: '#/components/schemas/nameReferenceType'
        uom:
          $ref: '#/components/schemas/nameReferenceType'
    boundingBoxData:
      required:
      - bbox
      type: object
      properties:
        crs:
          type: string
          format: uri
        bbox:
          maxItems: 6
          minItems: 4
          type: array
          items:
            type: number
    dataType:
      type: object
      properties:
        format:
          $ref: '#/components/schemas/format'
    transmissionMode:
      type: string
      enum:
      - value
      - reference
    valueType:
      oneOf:
      - $ref: '#/components/schemas/inlineValue'
      - $ref: '#/components/schemas/referenceValue'
    nameReferenceType:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        reference:
          type: string
          format: uri
    format:
      required:
      - mimeType
      type: object
      properties:
        mimeType:
          type: string
        schema:
          type: string
        encoding:
          type: string
    inlineValue:
      required:
      - inlineValue
      type: object
      properties:
        inlineValue:
          oneOf:
          - type: string
          - type: number
          - type: boolean
          - type: object
    referenceValue:
      required:
      - href
      type: object
      properties:
        href:
          type: string
    queryables_queryables:
      required:
      - queryable
      - type
      type: object
      properties:
        queryable:
          type: string
          description: the token that may be used in a CQL predicate
        title:
          type: string
          description: a human readble title for the queryable
        description:
          type: string
          description: a human-readable narrative describing the queryable
        language:
          type: string
          description: the language used for the title and description
        type:
          type: string
          description: the data type of the queryable
        type-ref:
          type: string
          description: a reference to the formal definition of the type
          format: url
    functionDescription_returns:
      type: object
      properties:
        type:
          type: string
        typeRef:
          type: string
          format: uri
    functionDescription_arguments:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        typeRef:
          type: string
          format: uri
    extent_spatial:
      type: object
      properties:
        bbox:
          minItems: 1
          type: array
          description: |-
            One or more bounding boxes that describe the spatial extent of the dataset.
            In the Core only a single bounding box is supported. Extensions may support
            additional areas. If multiple areas are provided, the union of the bounding
            boxes describes the spatial extent.
          items:
            maxItems: 6
            minItems: 4
            type: array
            description: |-
              Each bounding box is provided as four or six numbers, depending on
              whether the coordinate reference system includes a vertical axis
              (height or depth):

              * Lower left corner, coordinate axis 1
              * Lower left corner, coordinate axis 2
              * Minimum value, coordinate axis 3 (optional)
              * Upper right corner, coordinate axis 1
              * Upper right corner, coordinate axis 2
              * Maximum value, coordinate axis 3 (optional)

              The coordinate reference system of the values is WGS 84 longitude/latitude
              (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate
              reference system is specified in `crs`.

              For WGS 84 longitude/latitude the values are in most cases the sequence of
              minimum longitude, minimum latitude, maximum longitude and maximum latitude.
              However, in cases where the box spans the antimeridian the first value
              (west-most box edge) is larger than the third value (east-most box edge).

              If the vertical axis is included, the third and the sixth number are
              the bottom and the top of the 3-dimensional bounding box.

              If a feature has multiple spatial geometry properties, it is the decision of the
              server whether only a single spatial geometry property is used to determine
              the extent or all relevant geometries.
            example:
            - -180
            - -90
            - 180
            - 90
            items:
              type: number
        crs:
          type: string
          description: |-
            Coordinate reference system of the coordinates in the spatial extent
            (property `bbox`). The default reference system is WGS 84 longitude/latitude.
            In the Core this is the only supported coordinate reference system.
            Extensions may support additional coordinate reference systems and add
            additional enum values.
          default: http://www.opengis.net/def/crs/OGC/1.3/CRS84
          enum:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
      description: The spatial extent of the features in the collection.
    extent_temporal:
      type: object
      properties:
        interval:
          minItems: 1
          type: array
          description: |-
            One or more time intervals that describe the temporal extent of the dataset.
            The value `null` is supported and indicates an open time intervall.
            In the Core only a single time interval is supported. Extensions may support
            multiple intervals. If multiple intervals are provided, the union of the
            intervals describes the temporal extent.
          items:
            maxItems: 2
            minItems: 2
            type: array
            description: |-
              Begin and end times of the time interval. The timestamps
              are in the coordinate reference system specified in `trs`. By default
              this is the Gregorian calendar.
            example:
            - 2011-11-11T12:22:11Z
            - null
            items:
              type: string
              format: date-time
              nullable: true
        trs:
          type: string
          description: |-
            Coordinate reference system of the coordinates in the temporal extent
            (property `interval`). The default reference system is the Gregorian calendar.
            In the Core this is the only supported temporal reference system.
            Extensions may support additional temporal reference systems and add
            additional enum values.
          default: http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
          enum:
          - http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
      description: The temporal extent of the features in the collection.
  responses:
    "200":
      description: successful operation
    default:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception_2'
    Queryables:
      description: Dataset Querables
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/queryables'
          example:
            queryables:
            - queryable: elevation
              title: Elevation
              description: The average distance of the road segment above sea level.
              type: double
            - queryable: nlanes
              title: Temperature
              description: The total number of lanes in all directions.
              type: integer
            - queryable: geom
              title: Segment Geometry
              description: The geometry of the road segment
              type: linestring
            - queryable: name
              title: Segment Name
              description: The common name of the road segment.
              type: string
  parameters:
    f:
      name: f
      in: query
      description: The optional f parameter indicates the output format which the
        server shall provide as part of the response document.  The default format
        is GeoJSON.
      required: false
      style: form
      explode: false
      schema:
        type: string
        default: json
        enum:
        - json
        - html
        - jsonld
    sortby:
      name: sortby
      in: query
      description: The optional sortby parameter indicates the sort property and order
        on which the server shall present results in the response document using the
        convention `sortby=PROPERTY:X` where `PROPERTY` is the sort property and `X`
        is the sort order (`A` is ascending `D` is descending). Sorting by multiple
        properties is supported by providing a comma-separated list.
      required: false
      style: form
      explode: false
      schema:
        type: string
    startindex:
      name: startindex
      in: query
      description: The optional startindex parameter indicates the index within the
        result set from which the server shall begin presenting results in the response
        document.  The first element has an index of 0 (default).
      required: false
      style: form
      explode: false
      schema:
        minimum: 0
        type: integer
        default: 0
    filter:
      name: filter
      in: query
      description: The optional filter parameter to provide filters on the collection
        items
      required: false
      style: form
      explode: false
      schema:
        type: string
    filter-lang:
      name: filter-lang
      in: query
      description: The optional parameter to provide filter lang
      required: false
      style: form
      explode: false
      schema:
        type: string
        default: cql-text
        enum:
        - cql-text
        - cql-json
